{"version":3,"sources":["utils/vehiclesAPI.ts","components/VehiclesListItem.tsx","views/VehiclesList.tsx","car.svg","views/VehicleCard.tsx","components/CarMarker.tsx","views/Map.tsx","components/ListFilter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["baseUrl","getAllVehicles","a","fetch","res","json","vehicles","console","log","getVehiclesInPolygon","polygon","method","headers","body","JSON","stringify","response","VehiclesListItem","vehicle","onClick","chosen","scrollToVehicle","index","useEffect","style","backgroundColor","undefined","margin","className","vehicle_id","state","class_name","VehiclesList","setChosenVehicle","chosenVehicle","listRef","useRef","current","scrollTo","top","window","innerWidth","left","behavior","ref","map","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref3","SvgCar","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","width","height","viewBox","xmlSpace","id","transform","stroke","strokeWidth","strokeDasharray","strokeLinecap","strokeLinejoin","strokeMiterlimit","fill","fillRule","opacity","d","ForwardRef","Geocode","setApiKey","process","VehicleCard","useState","location","setLocation","fromLatLng","lat","lng","then","results","formatted_address","error","seats","CarMarker","$hover","vehicleColor","borderRadius","color","position","Map","setFilters","setAreaList","displayList","searchArea","setSearchArea","mapState","setMapState","mapsState","setMapsState","vehiclesInArea","setVehiclesInArea","isLoading","setIsLoading","defaultLocation","defaultBounds","getVehiclesInArea","getPath","td","forEach","coords","point","push","text","status","class","bootstrapURLKeys","center","defaultZoom","hoverDistance","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","zIndex","type","area","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","draggable","geodesic","editable","bottom","setMap","ListFilter","filters","value","name","onChange","e","placeholder","event","App","vehiclesList","setVehiclesList","setDisplayList","areaList","getVehicleList","tempList","previouslyChosen","filter","includes","maxHeight","display","flexDirection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.145dc6f3.chunk.js","sourcesContent":["const baseUrl = 'https://autofleetlieblich.herokuapp.com/'\nexport const getAllVehicles = async () => {\n    try {\n        const res = await fetch(baseUrl + 'vehicles')\n        const vehicles = await res.json()\n        return vehicles\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport const getVehiclesInPolygon = async (polygon: number[][]) => {\n    try {\n        const response = await fetch(baseUrl + 'vehicles/selectedArea', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(polygon)\n        });\n        return await response.json()\n    } catch (e) {\n        console.log(e)\n    }\n}","import React, { useEffect } from \"react\";\nimport { Vehicle } from \"../utils/vehicle\";\nimport './VehiclesListItem.css'\nexport const listItemMargin = 10;\n\nconst VehiclesListItem = ({ vehicle, onClick, chosen, scrollToVehicle, index }: { vehicle: Vehicle; onClick: Function; chosen: boolean; scrollToVehicle: Function; index: Number }) => {\n    useEffect(() => {\n        if (chosen) {\n            scrollToVehicle(index)\n        }\n    }, [chosen, index, scrollToVehicle])\n    return (\n        <button style={{ backgroundColor: chosen ? 'grey' : undefined, margin: `${listItemMargin}px auto` }} className='list-item' onClick={() => onClick(vehicle)} >\n            <div>Id: {vehicle.vehicle_id}</div>\n            <div>State: {vehicle.state}</div>\n            <div>Class: {vehicle.class_name}</div>\n        </button>\n    )\n}\n\nexport default VehiclesListItem;","import React, { useRef } from 'react';\nimport VehiclesListItem, { listItemMargin } from '../components/VehiclesListItem';\nimport { Vehicle } from '../utils/vehicle';\nimport './VehicleList.css'\n\nconst VehiclesList = ({ vehicles, setChosenVehicle, chosenVehicle }: { vehicles: Vehicle[]; setChosenVehicle: Function; chosenVehicle?: Vehicle }) => {\n    const listRef = useRef<any>(null)\n    const scrollToVehicle = (index: number) => {\n        listRef.current.scrollTo({\n            top: index * ((window.innerWidth > 1000 ? 50 : 80) + listItemMargin),\n            left: 0,\n            behavior: 'smooth'\n        })\n    }\n\n    return (\n        <div ref={listRef} className='list-container'>\n            {vehicles.map((vehicle, index) => {\n                return (\n                    <VehiclesListItem scrollToVehicle={scrollToVehicle} index={index} key={vehicle.vehicle_id} vehicle={vehicle} onClick={setChosenVehicle} chosen={chosenVehicle ? vehicle.vehicle_id === chosenVehicle.vehicle_id : false} />\n                )\n            })}\n        </div>\n    )\n}\n\nexport default VehiclesList;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Fabric.js 1.7.22\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nfunction SvgCar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 150,\n    height: 150,\n    viewBox: \"0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(128 128) scale(0.72 0.72)\",\n    style: {}\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      stroke: \"none\",\n      strokeWidth: 0,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"none\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \"translate(-175.05 -175.05000000000004) scale(3.89 3.89)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 40.756 42.489 h -1.96 c -0.82 0 -1.484 -0.664 -1.484 -1.484 s 0.664 -1.484 1.484 -1.484 h 1.96 c 0.82 0 1.484 0.664 1.484 1.484 S 41.575 42.489 40.756 42.489 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(0,0,0)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 89.985 44.526 c -0.919 -6.254 -12.283 -9.606 -22.7 -9.646 c -15.461 -11.31 -34.615 -11.762 -56.938 -1.342 L 3.621 34.66 C 1.523 35.009 0 36.807 0 38.934 v 10.024 c 0 1.039 0.374 2.044 1.051 2.829 l 2.335 2.708 c 0.824 0.956 2.02 1.504 3.282 1.504 h 2.184 c 0.862 4.542 4.855 7.989 9.644 7.989 c 4.79 0 8.783 -3.447 9.645 -7.989 h 36.341 c 0.862 4.542 4.855 7.989 9.645 7.989 s 8.783 -3.447 9.645 -7.989 h 1.894 c 2.389 0 4.334 -1.944 4.334 -4.334 v -6.924 L 89.985 44.526 z M 85.717 42.746 h -1.323 l -0.858 -1.507 C 84.404 41.712 85.149 42.215 85.717 42.746 z M 61.921 34.881 H 31.404 l -2.397 -4.702 C 41.366 27.526 52.252 29.093 61.921 34.881 z M 18.497 61.021 c -3.78 0 -6.855 -3.075 -6.855 -6.854 c 0 -3.78 3.075 -6.855 6.855 -6.855 c 3.78 0 6.855 3.075 6.855 6.855 C 25.352 57.946 22.277 61.021 18.497 61.021 z M 74.128 61.021 c -3.78 0 -6.855 -3.075 -6.855 -6.854 c 0 -3.78 3.075 -6.855 6.855 -6.855 s 6.855 3.075 6.855 6.855 C 80.983 57.946 77.908 61.021 74.128 61.021 z M 85.666 53.032 h -1.787 c -0.565 -4.883 -4.719 -8.688 -9.751 -8.688 s -9.186 3.805 -9.751 8.688 H 28.248 c -0.565 -4.883 -4.719 -8.688 -9.751 -8.688 c -5.032 0 -9.186 3.805 -9.751 8.688 H 6.668 c -0.398 0 -0.775 -0.173 -1.035 -0.474 l -2.335 -2.709 c -0.213 -0.247 -0.331 -0.563 -0.331 -0.89 v -6.469 h 1.619 c 0.82 0 1.484 -0.664 1.484 -1.484 s -0.664 -1.484 -1.484 -1.484 H 2.967 v -0.588 c 0 -0.671 0.48 -1.238 1.142 -1.348 l 7.128 -1.188 l 0.185 -0.087 c 5.087 -2.387 9.954 -4.187 14.619 -5.417 l 3.122 6.125 l 5.664 11.628 c 0.257 0.527 0.785 0.834 1.335 0.834 c 0.218 0 0.439 -0.048 0.649 -0.15 c 0.737 -0.359 1.043 -1.247 0.684 -1.984 l -4.628 -9.499 h 33.437 l 0.004 0.003 l 0.498 -0.003 c 4.47 -0.04 8.798 0.582 12.301 1.616 l 3.134 5.5 c 0.265 0.463 0.756 0.749 1.289 0.749 h 3.502 v 5.952 C 87.033 52.419 86.42 53.032 85.666 53.032 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(0,0,0)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 74.128 49.449 c -2.602 0 -4.718 2.116 -4.718 4.718 c 0 2.601 2.116 4.717 4.718 4.717 s 4.718 -2.116 4.718 -4.717 C 78.846 51.565 76.729 49.449 74.128 49.449 z M 74.128 55.917 c -0.966 0 -1.751 -0.785 -1.751 -1.75 c 0 -0.966 0.785 -1.751 1.751 -1.751 s 1.751 0.785 1.751 1.751 C 75.879 55.132 75.093 55.917 74.128 55.917 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(0,0,0)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 18.497 49.449 c -2.601 0 -4.718 2.116 -4.718 4.718 c 0 2.601 2.116 4.717 4.718 4.717 s 4.718 -2.116 4.718 -4.717 C 23.215 51.565 21.098 49.449 18.497 49.449 z M 18.497 55.917 c -0.965 0 -1.751 -0.785 -1.751 -1.75 c 0 -0.966 0.785 -1.751 1.751 -1.751 c 0.965 0 1.751 0.785 1.751 1.751 C 20.248 55.132 19.462 55.917 18.497 55.917 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(0,0,0)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCar);\nexport default __webpack_public_path__ + \"static/media/car.46056f08.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\nimport { Vehicle } from \"../utils/vehicle\";\nimport './VehicleCard.css'\nimport Geocode from \"react-geocode\";\nimport { ReactComponent as YourSvg } from '../car.svg';\nGeocode.setApiKey(process.env.REACT_APP_GOOGLE_API_KEY ? process.env.REACT_APP_GOOGLE_API_KEY : '')\nconst VehicleCard = ({ vehicle }: { vehicle?: Vehicle }) => {\n    const [location, setLocation] = useState()\n\n    useEffect(() => {\n        if (vehicle) {\n            Geocode.fromLatLng(`${vehicle.lat}`, `${vehicle.lng}`).then(\n                (response) => {\n                    setLocation(response.results[0].formatted_address)\n                },\n                (error) => {\n                    console.error(error);\n                }\n            );\n        }\n    }, [vehicle])\n\n    return (\n        <div className='card-container'>\n            {vehicle && location && <div className='card'>\n                <YourSvg width='40%' height='100%' />\n                <div style={{ width: '60%', margin: 'auto 0' }}>\n                    <div className='car-info'>Vehicle Id: {vehicle.vehicle_id}</div>\n                    <div className='car-info'>State: {vehicle.state}</div>\n                    <div className='car-info'>Seats: {vehicle.seats}</div>\n                    <div className='car-info'>Class: {vehicle.class_name}</div>\n                    <div className='car-info'>Location: {location}</div>\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nexport default VehicleCard;","import React from \"react\";\nimport { Vehicle } from \"../utils/vehicle\";\n\nconst CarMarker = ({ onClick, vehicle, $hover, chosen }: { vehicle: Vehicle; lat: number; lng: number; $hover?: boolean; onClick: Function; chosen: boolean }) => {\n    const vehicleColor = vehicle.state === 'online' ? 'green' : 'red'\n    return (\n        <button\n            style={{\n                height: '25px',\n                width: '25px',\n                backgroundColor: chosen ? vehicleColor : $hover ? vehicleColor : 'blue',\n                borderRadius: '100px',\n                color: 'white',\n                position: 'absolute',\n                left: -15,\n                top: -15,\n            }}\n            onClick={() => onClick(vehicle)}>\n        </button>\n    )\n};\n\nexport default CarMarker;","import React, { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { Vehicle } from '../utils/vehicle';\nimport CarMarker from '../components/CarMarker'\nimport { getVehiclesInPolygon } from '../utils/vehiclesAPI'\nimport './Map.css'\nimport Loader from \"react-loader-spinner\";\n\ninterface I_MapProps {\n  setChosenVehicle: Function;\n  chosenVehicle?: Vehicle;\n  setFilters: Function;\n  setAreaList: Function;\n  displayList: Vehicle[];\n}\n\nconst Map = ({ setChosenVehicle, chosenVehicle, setFilters, setAreaList, displayList }: I_MapProps) => {\n  const [searchArea, setSearchArea] = useState<any>()\n  const [mapState, setMapState] = useState<any>()\n  const [mapsState, setMapsState] = useState<any>()\n  const [vehiclesInArea, setVehiclesInArea] = useState<Vehicle[]>()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const defaultLocation = { lat: chosenVehicle ? chosenVehicle.lat : 32.085418, lng: chosenVehicle ? chosenVehicle.lng : 34.789417 }\n\n  const defaultBounds = [\n    { lat: defaultLocation.lat + .01, lng: defaultLocation.lng - .01 },\n    { lat: defaultLocation.lat + .01, lng: defaultLocation.lng + .01 },\n    { lat: defaultLocation.lat - .01, lng: defaultLocation.lng + .01 },\n    { lat: defaultLocation.lat - .01, lng: defaultLocation.lng - .01 },\n  ]\n\n  const closeSearchArea = () => {\n    searchArea.setMap(null)\n    setSearchArea(undefined)\n    setVehiclesInArea(undefined)\n    setAreaList()\n    setFilters({ text: '', status: 'all', class: 'all' })\n  }\n\n  const startSearchArea = () => {\n    if (mapsState) {\n      const area = new mapsState.Polygon({\n        map: mapState,\n        paths: defaultBounds,\n        strokeColor: \"green\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: \"green\",\n        fillOpacity: 0.35,\n        draggable: true,\n        geodesic: true,\n        editable: true,\n      })\n      setSearchArea(area)\n    }\n  }\n  const getVehiclesInArea = async () => {\n    setIsLoading(true)\n    const polygon: number[][] = []\n    searchArea.getPath().td.forEach((coords: any, i: number) => {\n      const point = []\n      point.push(coords.lat())\n      point.push(coords.lng())\n      polygon[i] = point\n    })\n    const res = await getVehiclesInPolygon(polygon)\n    if (res.length > 0) {\n      setVehiclesInArea(res)\n      setChosenVehicle(res[0])\n      setAreaList(res)\n      setFilters({ text: '', status: 'all', class: 'all' })\n    }\n    setIsLoading(false)\n  }\n\n  return (\n    <div className='container'>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_API_KEY || '' }}\n        center={{\n          lat: defaultLocation.lat,\n          lng: defaultLocation.lng\n        }}\n        defaultZoom={13}\n        hoverDistance={25}\n        yesIWantToUseGoogleMapApiInternals={true}\n        onGoogleApiLoaded={\n          ({ map, maps }) => {\n            setMapState(map)\n            setMapsState(maps)\n          }\n        }\n      >\n        {isLoading && <div style={{ zIndex: 999, position: 'absolute', top: -20, left: -20 }}>\n          <Loader\n            type=\"Puff\"\n            color=\"black\"\n            height={50}\n            width={50}\n          />\n        </div>}\n        {chosenVehicle && <CarMarker\n          lat={defaultLocation.lat}\n          lng={defaultLocation.lng}\n          onClick={setChosenVehicle}\n          vehicle={chosenVehicle}\n          chosen={true}\n        />}\n        {vehiclesInArea && chosenVehicle && displayList.map((vehicle: Vehicle) => {\n          return (\n            <CarMarker\n              key={vehicle.vehicle_id}\n              lat={vehicle.lat}\n              lng={vehicle.lng}\n              onClick={setChosenVehicle}\n              vehicle={vehicle}\n              chosen={vehicle.vehicle_id === chosenVehicle.vehicle_id}\n            />\n          )\n        })}\n      </GoogleMapReact>\n      <button\n        onClick={searchArea ? getVehiclesInArea : startSearchArea}\n        className='button'\n        style={{ bottom: 40 }} >\n        {!searchArea ? 'Start searching an area' : 'Search area'}\n      </button>\n      {searchArea && <button\n        onClick={closeSearchArea}\n        className='button'\n        style={{ bottom: 0 }} >\n        {'Close search area'}\n      </button>}\n    </div>\n  );\n\n}\n\nexport default Map;","import React from \"react\";\nimport './ListFilter.css'\n\nconst ListFilter = ({ setFilters, filters }: { setFilters: Function; filters: { text: string; status: string; class: string; } }) => {\n    return (\n        <ul className='list-filter'>\n            <div className='list-filter-half'>\n                <button onClick={() => setFilters({ ...filters, status: 'all' })} style={{ backgroundColor: filters.status === 'all' ? 'grey' : undefined }}>All</button>\n                <button onClick={() => setFilters({ ...filters, status: 'online' })} style={{ backgroundColor: filters.status === 'online' ? 'grey' : undefined }}>Online</button>\n                <button onClick={() => setFilters({ ...filters, status: 'in-ride' })} style={{ backgroundColor: filters.status === 'in-ride' ? 'grey' : undefined }}>In ride</button>\n            </div>\n            <div className='list-filter-half inputs'>\n                <select value={filters.class} name=\"class\" id=\"class\" style={{ margin: '5px' }} onChange={(e) => setFilters({ ...filters, class: e.target.value })}>\n                    <option value=\"all\">Class</option>\n                    <option value=\"A\">A</option>\n                    <option value=\"B\">B</option>\n                    <option value=\"C\">C</option>\n                    <option value=\"D\">D</option>\n                    <option value=\"E\">E</option>\n                </select>\n                <input style={{ margin: '5px' }} type=\"text\" placeholder=\"Vehicle ID\" value={filters.text} onChange={(event) => setFilters({ ...filters, text: event.target.value })} />\n            </div>\n        </ul >\n    )\n}\n\nexport default ListFilter;","import React, { useEffect, useState } from 'react';\nimport './App.css'\nimport { Vehicle } from './utils/vehicle';\nimport { getAllVehicles } from './utils/vehiclesAPI'\nimport VehiclesList from './views/VehiclesList';\nimport VehicleCard from './views/VehicleCard';\nimport Map from './views/Map'\nimport ListFilter from './components/ListFilter';\n\nfunction App() {\n  const [vehiclesList, setVehiclesList] = useState<Vehicle[]>([])\n  const [displayList, setDisplayList] = useState<Vehicle[]>([])\n  const [chosenVehicle, setChosenVehicle] = useState<Vehicle>()\n  const [filters, setFilters] = useState({ text: '', status: 'all', class: 'all' })\n  const [areaList, setAreaList] = useState<Vehicle[]>()\n\n  const getVehicleList = async () => {\n    const vehicles = await getAllVehicles()\n    setVehiclesList(vehicles)\n    setDisplayList(vehicles)\n    setChosenVehicle(vehicles[0])\n  }\n\n  useEffect(() => {\n    getVehicleList()\n  }, [])\n\n  useEffect(() => {\n    const previouslyChosen = chosenVehicle\n    let tempList: Vehicle[];\n    if (areaList) {\n      tempList = areaList.filter((vehicle: Vehicle) => {\n        return (\n          vehicle.vehicle_id.includes(filters.text) &&\n          (vehicle.class_name === filters.class || filters.class === 'all') &&\n          (vehicle.state === filters.status || filters.status === 'all')\n        )\n      });\n    } else {\n      tempList = vehiclesList.filter((vehicle: Vehicle) => {\n        return (\n          vehicle.vehicle_id.includes(filters.text) &&\n          (vehicle.class_name === filters.class || filters.class === 'all') &&\n          (vehicle.state === filters.status || filters.status === 'all')\n        )\n      });\n    }\n    setDisplayList(tempList)\n    setChosenVehicle(tempList[0] || previouslyChosen)\n  }, [filters, vehiclesList, areaList])\n\n  return (\n    <div className='app-container'>\n      <div className='map-container'>\n        <Map displayList={displayList} setAreaList={setAreaList} setChosenVehicle={setChosenVehicle} chosenVehicle={chosenVehicle} setFilters={setFilters} />\n        <div style={{ width: '30%', maxHeight: '100%', position: 'relative', display: 'flex', flexDirection: 'column' }}>\n          <ListFilter setFilters={setFilters} filters={filters} />\n          <VehiclesList vehicles={displayList} setChosenVehicle={setChosenVehicle} chosenVehicle={chosenVehicle} />\n\n        </div >\n      </div>\n      <div className='vehicle-card'>\n        <VehicleCard vehicle={chosenVehicle} />\n      </div >\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}